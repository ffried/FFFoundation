#if !canImport(ObjectiveC)
import XCTest

extension AngleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AngleTests = [
        ("testAngleComparesCorrectlyBetweenKinds", testAngleComparesCorrectlyBetweenKinds),
        ("testAngleConvertsCorrectly", testAngleConvertsCorrectly),
        ("testAngleDividesCorrectlyBetweenKinds", testAngleDividesCorrectlyBetweenKinds),
        ("testAngleFloatingPointConformance", testAngleFloatingPointConformance),
        ("testAngleHashesBasedOnRadians", testAngleHashesBasedOnRadians),
        ("testAngleIsCorrectlyExpressibleAsLiterals", testAngleIsCorrectlyExpressibleAsLiterals),
        ("testAngleMultipliesCorrectlyBetweenKinds", testAngleMultipliesCorrectlyBetweenKinds),
        ("testAngleSubtractsCorrectlyBetweenKinds", testAngleSubtractsCorrectlyBetweenKinds),
        ("testAngleSumsCorrectlyBetweenKinds", testAngleSumsCorrectlyBetweenKinds),
    ]
}

extension DiffTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DiffTests = [
        ("testChangeAnnotation", testChangeAnnotation),
        ("testChangeLignSign", testChangeLignSign),
        ("testMoreAdvancedDiff", testMoreAdvancedDiff),
        ("testSimpleDiff", testSimpleDiff),
    ]
}

extension StringClassesExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringClassesExtensionTests = [
        ("testStringCreatingFromClassRemovingNamespace", testStringCreatingFromClassRemovingNamespace),
        ("testStringCreatingFromClassWithoutRemovingNamespace", testStringCreatingFromClassWithoutRemovingNamespace),
    ]
}

extension TimerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TimerTests = [
        ("testRepeatingTimerWithShortIntervalAndTolerance", testRepeatingTimerWithShortIntervalAndTolerance),
        ("testTimerFiringManually", testTimerFiringManually),
        ("testTimerInvildatesOnDeinit", testTimerInvildatesOnDeinit),
        ("testTimerWithShortIntervalAndNoTolerance", testTimerWithShortIntervalAndNoTolerance),
        ("testTimerWithShortIntervalAndTolerance", testTimerWithShortIntervalAndTolerance),
    ]
}

extension TriangleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TriangleTests = [
        ("testOrthogonalTriangleCalculation", testOrthogonalTriangleCalculation),
        ("testOrthogonalTriangleWithSinglePoint", testOrthogonalTriangleWithSinglePoint),
        ("testTriangleBeingEquatable", testTriangleBeingEquatable),
        ("testTriangleBeingHashable", testTriangleBeingHashable),
        ("testTriangleWithAllPointsBeingTheSame", testTriangleWithAllPointsBeingTheSame),
        ("testTriangleWithAllPointsGiven", testTriangleWithAllPointsGiven),
    ]
}

extension TypeDescriptionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TypeDescriptionTests = [
        ("testTypeDescriptionCustomStringConvertible", testTypeDescriptionCustomStringConvertible),
        ("testTypeDescriptionIsGeneric", testTypeDescriptionIsGeneric),
        ("testTypeDescriptionTypeName", testTypeDescriptionTypeName),
        ("testTypeDescriptionWithNestedGenericTypes", testTypeDescriptionWithNestedGenericTypes),
        ("testTypeDescriptionWithNonGenericType", testTypeDescriptionWithNonGenericType),
        ("testTypeDescriptionWithOneGenericType", testTypeDescriptionWithOneGenericType),
        ("testTypeDescriptionWithThreeGenericType", testTypeDescriptionWithThreeGenericType),
        ("testTypeDescriptionWithTwoGenericType", testTypeDescriptionWithTwoGenericType),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AngleTests.__allTests__AngleTests),
        testCase(DiffTests.__allTests__DiffTests),
        testCase(StringClassesExtensionTests.__allTests__StringClassesExtensionTests),
        testCase(TimerTests.__allTests__TimerTests),
        testCase(TriangleTests.__allTests__TriangleTests),
        testCase(TypeDescriptionTests.__allTests__TypeDescriptionTests),
    ]
}
#endif
