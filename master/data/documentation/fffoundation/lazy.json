{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FFFoundation\/documentation\/FFFoundation"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12FFFoundation4LazyV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Lazy"
      }
    ],
    "modules" : [
      {
        "name" : "FFFoundation"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Lazy"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Lazy"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@propertyWrapper"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Lazy"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Deferred"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/FFFoundation\/SL",
        "doc:\/\/FFFoundation\/Se",
        "doc:\/\/FFFoundation\/SE",
        "doc:\/\/FFFoundation\/SQ",
        "doc:\/\/FFFoundation\/s27ExpressibleByBooleanLiteralP",
        "doc:\/\/FFFoundation\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc:\/\/FFFoundation\/s25ExpressibleByFloatLiteralP",
        "doc:\/\/FFFoundation\/s27ExpressibleByIntegerLiteralP",
        "doc:\/\/FFFoundation\/s23ExpressibleByNilLiteralP",
        "doc:\/\/FFFoundation\/s32ExpressibleByStringInterpolationP",
        "doc:\/\/FFFoundation\/s26ExpressibleByStringLiteralP",
        "doc:\/\/FFFoundation\/s33ExpressibleByUnicodeScalarLiteralP",
        "doc:\/\/FFFoundation\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init()",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(constructor:)",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(other:)",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(wrappedValue:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/wrappedValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/reset()"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Comparable-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Decodable-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Encodable-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Equatable-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByBooleanLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByFloatLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByIntegerLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByNilLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByStringInterpolation-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByStringLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Hashable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fffoundation\/lazy"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FFFoundation/SE": {
  "identifier" : "doc:\/\/FFFoundation\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://FFFoundation/SH": {
  "identifier" : "doc:\/\/FFFoundation\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://FFFoundation/SL": {
  "identifier" : "doc:\/\/FFFoundation\/SL",
  "title" : "Swift.Comparable",
  "type" : "unresolvable"
},
"doc://FFFoundation/SQ": {
  "identifier" : "doc:\/\/FFFoundation\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://FFFoundation/Se": {
  "identifier" : "doc:\/\/FFFoundation\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://FFFoundation/documentation/FFFoundation": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FFFoundation",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Lazy"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Lazy"
    }
  ],
  "role" : "symbol",
  "title" : "Lazy",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : " Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/Comparable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Comparable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Comparable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/comparable-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/decodable-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/encodable-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/equatable-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByBooleanLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByBooleanLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByBooleanLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebybooleanliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebyextendedgraphemeclusterliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByFloatLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByFloatLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByFloatLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebyfloatliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByIntegerLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByIntegerLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByIntegerLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebyintegerliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByNilLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByNilLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByNilLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebynilliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByStringInterpolation-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByStringInterpolation-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByStringInterpolation Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebystringinterpolation-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByStringLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByStringLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByStringLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebystringliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/ExpressibleByUnicodeScalarLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/ExpressibleByUnicodeScalarLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/expressiblebyunicodescalarliteral-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/Hashable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/Hashable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Hashable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/hashable-implementations"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/init()": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Deferred",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "ExpressibleByNilLiteral",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/init()"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/init(constructor:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "constructor"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Deferred"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(constructor:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(constructor:)",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/init(constructor:)"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/init(other:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "other"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12FFFoundation4LazyV",
      "text" : "Lazy"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Deferred"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(other:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(other:)",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/init(other:)"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/init(wrappedValue:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Deferred"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/init(wrappedValue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(wrappedValue:)",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/init(wrappedvalue:)"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/reset()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reset"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/reset()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reset()",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/reset()"
},
"doc://FFFoundation/documentation/FFFoundation/Lazy/wrappedValue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Deferred"
    }
  ],
  "identifier" : "doc:\/\/FFFoundation\/documentation\/FFFoundation\/Lazy\/wrappedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "wrappedValue",
  "type" : "topic",
  "url" : "\/documentation\/fffoundation\/lazy\/wrappedvalue"
},
"doc://FFFoundation/s23ExpressibleByNilLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s23ExpressibleByNilLiteralP",
  "title" : "Swift.ExpressibleByNilLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s25ExpressibleByFloatLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s25ExpressibleByFloatLiteralP",
  "title" : "Swift.ExpressibleByFloatLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s26ExpressibleByStringLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s26ExpressibleByStringLiteralP",
  "title" : "Swift.ExpressibleByStringLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s27ExpressibleByBooleanLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s27ExpressibleByBooleanLiteralP",
  "title" : "Swift.ExpressibleByBooleanLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s27ExpressibleByIntegerLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s27ExpressibleByIntegerLiteralP",
  "title" : "Swift.ExpressibleByIntegerLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s32ExpressibleByStringInterpolationP": {
  "identifier" : "doc:\/\/FFFoundation\/s32ExpressibleByStringInterpolationP",
  "title" : "Swift.ExpressibleByStringInterpolation",
  "type" : "unresolvable"
},
"doc://FFFoundation/s33ExpressibleByUnicodeScalarLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s33ExpressibleByUnicodeScalarLiteralP",
  "title" : "Swift.ExpressibleByUnicodeScalarLiteral",
  "type" : "unresolvable"
},
"doc://FFFoundation/s43ExpressibleByExtendedGraphemeClusterLiteralP": {
  "identifier" : "doc:\/\/FFFoundation\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
  "title" : "Swift.ExpressibleByExtendedGraphemeClusterLiteral",
  "type" : "unresolvable"
}
}
}